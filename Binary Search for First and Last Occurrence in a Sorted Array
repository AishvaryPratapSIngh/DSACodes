package DsaMe;
import java.util.Arrays;

public class BinarySearchQ3 {
    public static void main(String[] args) {
        int[] arr = {5,7,7,8,8,10};
        int target = 8;
        int[] res = {FirstIndex(arr,target),LastIndex(arr,target)};
        System.out.println(Arrays.toString(res));
    }
    static int FirstIndex(int[] arr, int target) {
        int start =0;
        int end = arr.length-1;
        int res = -1;
//        finding the first occurrence of the element
        while (start<=end){
            int mid = start+(end-start)/2;
//            searching toward the left side
            if(target == arr[mid]){
                res = mid;
                end = mid-1;
            }
            else if(target>arr[mid]){
                start = mid+1;
            }
            else {
                end = mid-1;
            }
        }
        return  res;
    }
    static  int LastIndex(int[] arr,int target){
        int start =0;
        int end = arr.length-1;
        int res = -1;
        while (start<=end){
            int mid = start+(end-start)/2;
//            searching toward the right side
            if(target == arr[mid]){
                res = mid;
                start = mid+1;
            }
            else if(target>arr[mid]){
                start = mid+1;
            }
            else {
                end = mid -1;
            }
        }
        return res;
    }
}
